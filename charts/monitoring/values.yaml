loki-stack:
  loki:
    enabled: true
    nodeSelector: 
      type: dependent_services
    tolerations:
      - key: "type"
        operator: "Equal"
        value: "dependent_services" 
        effect: "NoSchedule"
    image: 
      tag: 2.9.3
    readinessProbe:
      httpGet:
        path: /ready
        port: http-metrics
      initialDelaySeconds: 45
    livenessProbe:
      httpGet:
        path: /ready
        port: http-metrics
      initialDelaySeconds: 45
    datasource:
      jsonData: "{}"  
      uid: ""
  grafana:
    enabled: false

  promtail:
    enabled: true 
    tolerations:
      - key: "type"
        operator: "Equal"
        value: "dependent_services" 
        effect: "NoSchedule"
      - key: "type"
        operator: "Equal"
        value: "application"
        effect: "NoSchedule"
      - key: "type"
        operator: "Equal"
        value: "database"
        effect: "NoSchedule"
    config:
      logLevel: info
      serverPort: 3101
      clients:
        - url: http://<loki-service-name>:3100/loki/api/v1/push

kube-prometheus-stack:
  enabled: true
  alertmanager:
    enabled: true
    alertmanagerSpec:
      nodeSelector: 
        type: dependent_services
      tolerations:
        - key: "type"
          operator: "Equal"
          value: "dependent_services" 
          effect: "NoSchedule"

  grafana:
    enabled: true
    nodeSelector: 
      type: dependent_services
    tolerations:
      - key: "type"
        operator: "Equal"
        value: "dependent_services" 
        effect: "NoSchedule"

  prometheusOperator:
    enabled: true
    nodeSelector: 
      type: dependent_services
    tolerations:
      - key: "type"
        operator: "Equal"
        value: "dependent_services" 
        effect: "NoSchedule"

  prometheus:
    enabled: true
    prometheusSpec:
      tolerations: 
        - key: "type"
          operator: "Equal"
          value: "dependent_services" 
          effect: "NoSchedule"  
      nodeSelector:
        type: dependent_services
      additionalScrapeConfigs:
        - job_name: 'static-monitor'
          metrics_path: /probe
          params:
            module: [http_2xx]  # Look for a HTTP 200 response.
          static_configs:
            - targets:
              - 'http://<student-api-service-name>:3000/api/v1/health'  # Kubernetes DNS name for your service
          relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
            - source_labels: [__param_target]
              target_label: instance
            - target_label: __address__
              replacement: "<blackbox-exporter-service-name>:9115"  # Blackbox exporter's address
        - job_name: 'app-metrics'
          metrics_path: /metrics
          scrape_interval: 15s
          static_configs:
            - targets:
              - '<student-api-service-name>:3000'  # Kubernetes DNS name for your service
          relabel_configs:
            - source_labels: [__address__]
              target_label: instance
            - target_label: application
              replacement: 'student-api'

prometheus-blackbox-exporter:
  enabled: true
  nodeSelector: 
    type: dependent_services
  tolerations:
    - key: "type"
      operator: "Equal"
      value: "dependent_services" 
      effect: "NoSchedule"